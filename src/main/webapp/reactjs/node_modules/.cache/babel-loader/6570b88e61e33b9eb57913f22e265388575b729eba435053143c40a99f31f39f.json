{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\spring\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\Pages\\\\Lk.js\";\nimport { GlobalFilter } from \"../Components/GlobalFilter\";\nimport { ColumnFilter } from \"../Components/ColumnFilter\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LkData } from \"../Components/LkData\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Lk = ({\n  loginData\n}) => {\n  // const handleSubmitOrder = async () => {\n  //     try {\n  //         const fromTime = document.getElementById('from_time').value;\n  //         const toTime = document.getElementById('to_time').value;\n  //         const orderData = {\n  //             items: basketData.map((item) => ({\n  //                 productId: item.id,\n  //                 quantity: item.clickCount,\n  //             })),\n  //             clientCode: loginData['id'],\n  //             paymentStatus: 'При получении',\n  //             deliveryAdress: selectedDeliveryMethod === 'pickup' ? document.getElementById('deliveryCity').value : document.getElementById('deliveryCity1').value,\n  //             deliveryStatus: selectedDeliveryMethod === 'pickup' ? 'Самовывоз' : 'Доставка транспортной компанией',\n  //             deliveryTimeFrom: fromTime,\n  //             deliveryTimeTo: toTime,\n  //         };\n  //\n  //         const response = await fetch('http://localhost:8080/orders', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify(orderData),\n  //         });\n  //\n  //         if (response.ok) {\n  //             const data = await response.json();\n  //             console.log('Заказ успешно создан:', data);\n  //         } else {\n  //             console.error('Ошибка при создании заказа:', response.status);\n  //         }\n  //     } catch (error) {\n  //         console.error('Ошибка при создании заказа:', error);\n  //     }\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0 bg-white rounded-lg p-8 shadow-lg w-60 py-2 self-start bg-white rounded-lg mx-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl py-2 text-gray-800 font-bold\",\n        children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        filter: globalFilter,\n        setFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ColumnFilter, {\n        column: headerGroups[0].headers[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LkData, {\n      loginData: loginData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = Lk;\nvar _c;\n$RefreshReg$(_c, \"Lk\");","map":{"version":3,"names":["GlobalFilter","ColumnFilter","React","Link","LkData","jsxDEV","_jsxDEV","Fragment","_Fragment","Lk","loginData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","filter","globalFilter","setFilter","setGlobalFilter","column","headerGroups","headers","_c","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/spring/src/main/webapp/reactjs/src/Pages/Lk.js"],"sourcesContent":["import {GlobalFilter} from \"../Components/GlobalFilter\";\r\nimport {ColumnFilter} from \"../Components/ColumnFilter\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {LkData} from \"../Components/LkData\";\r\n\r\nexport const Lk = ({loginData}) => {\r\n\r\n    // const handleSubmitOrder = async () => {\r\n    //     try {\r\n    //         const fromTime = document.getElementById('from_time').value;\r\n    //         const toTime = document.getElementById('to_time').value;\r\n    //         const orderData = {\r\n    //             items: basketData.map((item) => ({\r\n    //                 productId: item.id,\r\n    //                 quantity: item.clickCount,\r\n    //             })),\r\n    //             clientCode: loginData['id'],\r\n    //             paymentStatus: 'При получении',\r\n    //             deliveryAdress: selectedDeliveryMethod === 'pickup' ? document.getElementById('deliveryCity').value : document.getElementById('deliveryCity1').value,\r\n    //             deliveryStatus: selectedDeliveryMethod === 'pickup' ? 'Самовывоз' : 'Доставка транспортной компанией',\r\n    //             deliveryTimeFrom: fromTime,\r\n    //             deliveryTimeTo: toTime,\r\n    //         };\r\n    //\r\n    //         const response = await fetch('http://localhost:8080/orders', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //             },\r\n    //             body: JSON.stringify(orderData),\r\n    //         });\r\n    //\r\n    //         if (response.ok) {\r\n    //             const data = await response.json();\r\n    //             console.log('Заказ успешно создан:', data);\r\n    //         } else {\r\n    //             console.error('Ошибка при создании заказа:', response.status);\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('Ошибка при создании заказа:', error);\r\n    //     }\r\n    // };\r\n    return (<>\r\n        <div className=\"flex-shrink-0 bg-white rounded-lg p-8 shadow-lg w-60 py-2 self-start bg-white rounded-lg mx-5\">\r\n            <h2 className=\"text-xl py-2 text-gray-800 font-bold\">Фильтр</h2>\r\n            <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\r\n            <ColumnFilter column={headerGroups[0].headers[4]}/>\r\n        </div>\r\n    <LkData loginData={loginData}/>\r\n        </>\r\n)\r\n}"],"mappings":";AAAA,SAAQA,YAAY,QAAO,4BAA4B;AACvD,SAAQC,YAAY,QAAO,4BAA4B;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,kBAAkB;AACrC,SAAQC,MAAM,QAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,OAAO,MAAMC,EAAE,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAE/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBAAQJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACJL,OAAA;MAAKM,SAAS,EAAC,+FAA+F;MAAAD,QAAA,gBAC1GL,OAAA;QAAIM,SAAS,EAAC,sCAAsC;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChEV,OAAA,CAACN,YAAY;QAACiB,MAAM,EAAEC,YAAa;QAACC,SAAS,EAAEC;MAAgB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjEV,OAAA,CAACL,YAAY;QAACoB,MAAM,EAAEC,YAAY,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACVV,OAAA,CAACF,MAAM;MAACM,SAAS,EAAEA;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACzB,CAAC;AAEX,CAAC;AAAAQ,EAAA,GA9CYf,EAAE;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}