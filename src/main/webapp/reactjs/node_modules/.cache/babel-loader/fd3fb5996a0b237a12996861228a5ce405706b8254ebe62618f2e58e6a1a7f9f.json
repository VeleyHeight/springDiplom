{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\Projects\\\\react-start\\\\src\\\\Components\\\\BasicTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-4 px-6 bg-gray-300\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps,\n      className: \"w-full border-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"text-black\",\n        children: headerGroups.map((headerGroup, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps,\n          children: headerGroup.headers.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            className: `px-4 py-2 font-bold bg-gray-300 border-none text-left ${index === 0 ? 'rounded-l-lg' : ''} ${index === headerGroup.headers.length - 1 ? 'rounded-r-lg' : ''}`,\n            children: column.render('Header')\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 19\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps,\n        className: \"text-gray-800\",\n        children: rows.map((row, index) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            className: `${index % 2 === 0 ? 'bg-gray-200' : 'bg-white'}`,\n            children: row.cells.map((cell, index) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                className: `px-4 py-2 border-none text-left vertical-top ${index === 0 ? 'rounded-l-lg' : ''} ${index === row.cells.length - 1 ? 'rounded-r-lg' : ''}`,\n                children: cell.render('Cell')\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 23\n              }, this);\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n_c = BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","useTable","MOCK_DATA","COLUMNS","jsxDEV","_jsxDEV","BasicTable","_s","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","map","headerGroup","index","getHeaderGroupProps","headers","column","getHeaderProps","length","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/Projects/react-start/src/Components/BasicTable.js"],"sourcesContent":["import React, { useMemo} from 'react'\r\nimport { useTable } from 'react-table'\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport { COLUMNS } from './columns'\r\nexport const BasicTable = () => {\r\n    const columns = useMemo(() => COLUMNS, []);\r\n    const data = useMemo(() => MOCK_DATA, []);\r\n    const tableInstance = useTable({\r\n      columns,\r\n      data\r\n    });\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n  \r\n    return (\r\n      <div className=\"py-4 px-6 bg-gray-300\">\r\n        <table {...getTableProps} className=\"w-full border-none\">\r\n          <thead className=\"text-black\">\r\n            {headerGroups.map((headerGroup, index) => (\r\n              <tr key={index} {...headerGroup.getHeaderGroupProps}>\r\n                {headerGroup.headers.map((column, index) => (\r\n                  <th\r\n                    key={index}\r\n                    {...column.getHeaderProps()}\r\n                    className={`px-4 py-2 font-bold bg-gray-300 border-none text-left ${\r\n                      index === 0 ? 'rounded-l-lg' : ''\r\n                    } ${index === headerGroup.headers.length - 1 ? 'rounded-r-lg' : ''}`}\r\n                  >\r\n                    {column.render('Header')}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps} className=\"text-gray-800\">\r\n            {rows.map((row, index) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr\r\n                  key={index}\r\n                  {...row.getRowProps()}\r\n                  className={`${index % 2 === 0 ? 'bg-gray-200' : 'bg-white'}`}\r\n                >\r\n                  {row.cells.map((cell, index) => {\r\n                    return (\r\n                      <td\r\n                        key={index}\r\n                        {...cell.getCellProps()}\r\n                        className={`px-4 py-2 border-none text-left vertical-top ${\r\n                          index === 0 ? 'rounded-l-lg' : ''\r\n                        } ${index === row.cells.length - 1 ? 'rounded-r-lg' : ''}`}\r\n                      >\r\n                        {cell.render('Cell')}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}