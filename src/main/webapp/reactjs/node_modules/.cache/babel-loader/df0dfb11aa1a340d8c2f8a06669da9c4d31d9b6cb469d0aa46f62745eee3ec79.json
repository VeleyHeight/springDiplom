{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\spring\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\Pages\\\\Lk.js\";\nimport { GlobalFilter } from \"../Components/GlobalFilter\";\nimport { ColumnFilter } from \"../Components/ColumnFilter\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LkData = ({\n  loginData\n}) => {\n  // const handleSubmitOrder = async () => {\n  //     try {\n  //         const fromTime = document.getElementById('from_time').value;\n  //         const toTime = document.getElementById('to_time').value;\n  //         const orderData = {\n  //             items: basketData.map((item) => ({\n  //                 productId: item.id,\n  //                 quantity: item.clickCount,\n  //             })),\n  //             clientCode: loginData['id'],\n  //             paymentStatus: 'При получении',\n  //             deliveryAdress: selectedDeliveryMethod === 'pickup' ? document.getElementById('deliveryCity').value : document.getElementById('deliveryCity1').value,\n  //             deliveryStatus: selectedDeliveryMethod === 'pickup' ? 'Самовывоз' : 'Доставка транспортной компанией',\n  //             deliveryTimeFrom: fromTime,\n  //             deliveryTimeTo: toTime,\n  //         };\n  //\n  //         const response = await fetch('http://localhost:8080/orders', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify(orderData),\n  //         });\n  //\n  //         if (response.ok) {\n  //             const data = await response.json();\n  //             console.log('Заказ успешно создан:', data);\n  //         } else {\n  //             console.error('Ошибка при создании заказа:', response.status);\n  //         }\n  //     } catch (error) {\n  //         console.error('Ошибка при создании заказа:', error);\n  //     }\n  // };\n  return /*#__PURE__*/_jsxDEV(LkData, {\n    loginData: loginData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_c = LkData;\nvar _c;\n$RefreshReg$(_c, \"LkData\");","map":{"version":3,"names":["GlobalFilter","ColumnFilter","React","Link","jsxDEV","_jsxDEV","LkData","loginData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/spring/src/main/webapp/reactjs/src/Pages/Lk.js"],"sourcesContent":["import {GlobalFilter} from \"../Components/GlobalFilter\";\r\nimport {ColumnFilter} from \"../Components/ColumnFilter\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const LkData = ({loginData}) => {\r\n\r\n    // const handleSubmitOrder = async () => {\r\n    //     try {\r\n    //         const fromTime = document.getElementById('from_time').value;\r\n    //         const toTime = document.getElementById('to_time').value;\r\n    //         const orderData = {\r\n    //             items: basketData.map((item) => ({\r\n    //                 productId: item.id,\r\n    //                 quantity: item.clickCount,\r\n    //             })),\r\n    //             clientCode: loginData['id'],\r\n    //             paymentStatus: 'При получении',\r\n    //             deliveryAdress: selectedDeliveryMethod === 'pickup' ? document.getElementById('deliveryCity').value : document.getElementById('deliveryCity1').value,\r\n    //             deliveryStatus: selectedDeliveryMethod === 'pickup' ? 'Самовывоз' : 'Доставка транспортной компанией',\r\n    //             deliveryTimeFrom: fromTime,\r\n    //             deliveryTimeTo: toTime,\r\n    //         };\r\n    //\r\n    //         const response = await fetch('http://localhost:8080/orders', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //             },\r\n    //             body: JSON.stringify(orderData),\r\n    //         });\r\n    //\r\n    //         if (response.ok) {\r\n    //             const data = await response.json();\r\n    //             console.log('Заказ успешно создан:', data);\r\n    //         } else {\r\n    //             console.error('Ошибка при создании заказа:', response.status);\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('Ошибка при создании заказа:', error);\r\n    //     }\r\n    // };\r\n    return (\r\n        <LkData loginData={loginData} />\r\n           )\r\n}"],"mappings":";AAAA,SAAQA,YAAY,QAAO,4BAA4B;AACvD,SAAQC,YAAY,QAAO,4BAA4B;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAEnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACIF,OAAA,CAACC,MAAM;IAACC,SAAS,EAAEA;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExC,CAAC;AAAAC,EAAA,GAxCYN,MAAM;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}